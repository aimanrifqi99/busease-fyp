{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\BusEase\\\\admin\\\\src\\\\components\\\\UserDetail\\\\UserDetail.jsx\",\n    _s = $RefreshSig$();\n\n// src/pages/user/UserDetail.jsx\nimport React, { useEffect, useState } from 'react';\nimport { getUser, updateUser } from '../../api/userApi';\nimport { useParams } from 'react-router-dom';\nimport './UserDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserDetail = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    isAdmin: false,\n    img: ''\n  });\n  const [successMessage, setSuccessMessage] = useState('');\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const {\n          data\n        } = await getUser(id);\n        setUser(data);\n        setFormData({\n          username: data.username,\n          email: data.email,\n          isAdmin: data.isAdmin,\n          img: data.img || ''\n        });\n      } catch (err) {\n        setError('Failed to fetch user details');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUser();\n  }, [id]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      await updateUser(id, formData);\n      setSuccessMessage('User information updated successfully');\n      setTimeout(() => setSuccessMessage(''), 3000); // Clear message after 3 seconds\n    } catch (err) {\n      setError('Failed to update user information');\n      console.error(err);\n    }\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading user details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userDetail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"successMessage\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Profile Image URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"img\",\n          value: formData.img,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Is Admin:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"isAdmin\",\n          checked: formData.isAdmin,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), user.img && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: formData.img,\n      alt: formData.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserDetail, \"2QMmnIpT6PLRBgV0IVkdtSXruWE=\", false, function () {\n  return [useParams];\n});\n\n_c = UserDetail;\nexport default UserDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDetail\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/BusEase/admin/src/components/UserDetail/UserDetail.jsx"],"names":["React","useEffect","useState","getUser","updateUser","useParams","UserDetail","id","user","setUser","loading","setLoading","error","setError","formData","setFormData","username","email","isAdmin","img","successMessage","setSuccessMessage","fetchUser","data","err","console","handleChange","e","name","value","type","checked","target","handleSubmit","preventDefault","setTimeout"],"mappings":"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","sourcesContent":["// src/pages/user/UserDetail.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getUser, updateUser } from '../../api/userApi';\r\nimport { useParams } from 'react-router-dom';\r\nimport './UserDetail.css';\r\n\r\nconst UserDetail = () => {\r\n    const { id } = useParams();\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',\r\n        isAdmin: false,\r\n        img: ''\r\n    });\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                const { data } = await getUser(id);\r\n                setUser(data);\r\n                setFormData({\r\n                    username: data.username,\r\n                    email: data.email,\r\n                    isAdmin: data.isAdmin,\r\n                    img: data.img || ''\r\n                });\r\n            } catch (err) {\r\n                setError('Failed to fetch user details');\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchUser();\r\n    }, [id]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: type === 'checkbox' ? checked : value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await updateUser(id, formData);\r\n            setSuccessMessage('User information updated successfully');\r\n            setTimeout(() => setSuccessMessage(''), 3000); // Clear message after 3 seconds\r\n        } catch (err) {\r\n            setError('Failed to update user information');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    if (loading) return <div>Loading user details...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <div className=\"userDetail\">\r\n            <h2>User Details</h2>\r\n            {successMessage && <div className=\"successMessage\">{successMessage}</div>}\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    <strong>Username:</strong>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={formData.username}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <strong>Email:</strong>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <strong>Profile Image URL:</strong>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"img\"\r\n                        value={formData.img}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <strong>Is Admin:</strong>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"isAdmin\"\r\n                        checked={formData.isAdmin}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Update User</button>\r\n            </form>\r\n            {user.img && <img src={formData.img} alt={formData.username} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserDetail;\r\n"]},"metadata":{},"sourceType":"module"}