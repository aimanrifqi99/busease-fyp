{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\BusEase\\\\admin\\\\src\\\\components\\\\UserDetail\\\\UserDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getUser, updateUser } from '../../api/userApi';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './UserDetail.css';\nimport DriveFolderUploadOutlinedIcon from '@mui/icons-material/DriveFolderUploadOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserDetail = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate(); // Added useNavigate hook\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    isAdmin: false,\n    img: ''\n  });\n  const [file, setFile] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const {\n          data\n        } = await getUser(id);\n        setFormData({\n          username: data.username,\n          email: data.email,\n          isAdmin: data.isAdmin,\n          img: data.img || ''\n        });\n      } catch (err) {\n        setError('Failed to fetch user details');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUser();\n  }, [id]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    let imgUrl = formData.img;\n\n    if (file) {\n      const data = new FormData();\n      data.append('file', file);\n      data.append('upload_preset', 'upload'); // Cloudinary preset\n\n      try {\n        const uploadRes = await axios.post('https://api.cloudinary.com/v1_1/dhvb035xa/image/upload', data);\n        imgUrl = uploadRes.data.url;\n      } catch (err) {\n        setError('Failed to upload image');\n        return;\n      }\n    }\n\n    try {\n      await updateUser(id, { ...formData,\n        img: imgUrl\n      });\n      setSuccessMessage('User information updated successfully');\n      setTimeout(() => setSuccessMessage(''), 3000); // Clear message after 3 seconds\n    } catch (err) {\n      setError('Failed to update user information');\n      console.error(err);\n    }\n  };\n\n  const handleCancel = () => {\n    navigate(-1); // Navigate back to the previous page\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading user details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userDetail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageUploadSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          className: \"imageUploadLabel\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: file ? URL.createObjectURL(file) : formData.img || 'https://static.thenounproject.com/png/638636-200.png',\n            alt: \"Profile Preview\",\n            className: \"imagePreview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DriveFolderUploadOutlinedIcon, {\n            className: \"uploadIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          onChange: e => setFile(e.target.files[0]),\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Phone Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"number\",\n          value: formData.phone,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Is Admin:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"isAdmin\",\n          checked: formData.isAdmin,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessage\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 27\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"successMessage\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleCancel,\n          className: \"cancelButton\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserDetail, \"qoUU3SVa76ANQtuBsCAb2ouJXS4=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = UserDetail;\nexport default UserDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDetail\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/BusEase/admin/src/components/UserDetail/UserDetail.jsx"],"names":["React","useEffect","useState","getUser","updateUser","useParams","useNavigate","axios","DriveFolderUploadOutlinedIcon","UserDetail","id","navigate","loading","setLoading","error","setError","formData","setFormData","username","email","isAdmin","img","file","setFile","successMessage","setSuccessMessage","fetchUser","data","err","console","handleChange","e","name","value","type","checked","target","handleSubmit","preventDefault","imgUrl","FormData","append","uploadRes","post","url","setTimeout","handleCancel","URL","createObjectURL","files","display","phone"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getUser, updateUser } from '../../api/userApi';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './UserDetail.css';\r\nimport DriveFolderUploadOutlinedIcon from '@mui/icons-material/DriveFolderUploadOutlined';\r\n\r\nconst UserDetail = () => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate(); // Added useNavigate hook\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',\r\n        isAdmin: false,\r\n        img: ''\r\n    });\r\n    const [file, setFile] = useState(null);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                const { data } = await getUser(id);\r\n                setFormData({\r\n                    username: data.username,\r\n                    email: data.email,\r\n                    isAdmin: data.isAdmin,\r\n                    img: data.img || ''\r\n                });\r\n            } catch (err) {\r\n                setError('Failed to fetch user details');\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchUser();\r\n    }, [id]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: type === 'checkbox' ? checked : value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(null);\r\n\r\n        let imgUrl = formData.img;\r\n        if (file) {\r\n            const data = new FormData();\r\n            data.append('file', file);\r\n            data.append('upload_preset', 'upload'); // Cloudinary preset\r\n\r\n            try {\r\n                const uploadRes = await axios.post(\r\n                    'https://api.cloudinary.com/v1_1/dhvb035xa/image/upload',\r\n                    data\r\n                );\r\n                imgUrl = uploadRes.data.url;\r\n            } catch (err) {\r\n                setError('Failed to upload image');\r\n                return;\r\n            }\r\n        }\r\n\r\n        try {\r\n            await updateUser(id, { ...formData, img: imgUrl });\r\n            setSuccessMessage('User information updated successfully');\r\n            setTimeout(() => setSuccessMessage(''), 3000); // Clear message after 3 seconds\r\n        } catch (err) {\r\n            setError('Failed to update user information');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        navigate(-1); // Navigate back to the previous page\r\n    };\r\n\r\n    if (loading) return <div>Loading user details...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <div className=\"userDetail\">\r\n            <h2>User Details</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"imageUploadSection\">\r\n                    <label htmlFor=\"file\" className=\"imageUploadLabel\">\r\n                        <img\r\n                            src={\r\n                                file\r\n                                    ? URL.createObjectURL(file)\r\n                                    : formData.img || 'https://static.thenounproject.com/png/638636-200.png'\r\n                            }\r\n                            alt=\"Profile Preview\"\r\n                            className=\"imagePreview\"\r\n                        />\r\n                        <DriveFolderUploadOutlinedIcon className=\"uploadIcon\" />\r\n                    </label>\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"file\"\r\n                        onChange={(e) => setFile(e.target.files[0])}\r\n                        style={{ display: 'none' }}\r\n                    />\r\n                </div>\r\n                <label>\r\n                    <strong>Username:</strong>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={formData.username}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <strong>Email:</strong>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <strong>Phone Number:</strong>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"number\"\r\n                        value={formData.phone}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <strong>Is Admin:</strong>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"isAdmin\"\r\n                        checked={formData.isAdmin}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                {error && <div className=\"errorMessage\">{error}</div>}\r\n                {successMessage && <div className=\"successMessage\">{successMessage}</div>}\r\n\r\n                <div className=\"buttonGroup\">\r\n                    <button type=\"submit\">Update User</button>\r\n                    <button type=\"button\" onClick={handleCancel} className=\"cancelButton\">Back</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserDetail;"]},"metadata":{},"sourceType":"module"}