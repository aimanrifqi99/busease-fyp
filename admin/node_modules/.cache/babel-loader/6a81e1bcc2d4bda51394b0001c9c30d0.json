{"ast":null,"code":"// src/api/bookingApi.js\nimport axios from 'axios';\nconst bookingApiClient = axios.create({\n  baseURL: 'http://localhost:5000/api/bookings',\n  withCredentials: true // Keeps cookies, but JWT from localStorage must still be added\n\n}); // Add a request interceptor to include the Authorization header with the JWT\n\nbookingApiClient.interceptors.request.use(config => {\n  var _JSON$parse;\n\n  const token = (_JSON$parse = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.token;\n\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n}, error => Promise.reject(error)); // Fetch all bookings (admin)\n\nexport const getAllBookings = () => bookingApiClient.get('/'); // Fetch bookings for a specific user\n\nexport const getUserBookings = userId => bookingApiClient.get(`/user/${userId}`); // Fetch a single booking by ID\n\nexport const getBooking = bookingId => bookingApiClient.get(`/${bookingId}`); // Cancel a booking\n\nexport const cancelBooking = bookingId => bookingApiClient.post('/cancel-booking', {\n  bookingId\n}); // Update a booking\n\nexport const updateBooking = (bookingId, updateData) => bookingApiClient.put(`/${bookingId}`, updateData); // Delete a booking\n\nexport const deleteBooking = bookingId => bookingApiClient.delete(`/${bookingId}`);\nexport default bookingApiClient;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/BusEase/admin/src/api/bookingApi.js"],"names":["axios","bookingApiClient","create","baseURL","withCredentials","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","headers","Authorization","error","Promise","reject","getAllBookings","get","getUserBookings","userId","getBooking","bookingId","cancelBooking","post","updateBooking","updateData","put","deleteBooking","delete"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,gBAAgB,GAAGD,KAAK,CAACE,MAAN,CAAa;AAClCC,EAAAA,OAAO,EAAE,oCADyB;AAElCC,EAAAA,eAAe,EAAE,IAFiB,CAEX;;AAFW,CAAb,CAAzB,C,CAKA;;AACAH,gBAAgB,CAACI,YAAjB,CAA8BC,OAA9B,CAAsCC,GAAtC,CACKC,MAAD,IAAY;AAAA;;AACR,QAAMC,KAAK,kBAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAH,gDAAG,YAA0CJ,KAAxD;;AACA,MAAIA,KAAJ,EAAW;AACPD,IAAAA,MAAM,CAACM,OAAP,CAAeC,aAAf,GAAgC,UAASN,KAAM,EAA/C;AACH;;AACD,SAAOD,MAAP;AACH,CAPL,EAQKQ,KAAD,IAAWC,OAAO,CAACC,MAAR,CAAeF,KAAf,CARf,E,CAWA;;AACA,OAAO,MAAMG,cAAc,GAAG,MAAMlB,gBAAgB,CAACmB,GAAjB,CAAqB,GAArB,CAA7B,C,CAEP;;AACA,OAAO,MAAMC,eAAe,GAAIC,MAAD,IAAYrB,gBAAgB,CAACmB,GAAjB,CAAsB,SAAQE,MAAO,EAArC,CAApC,C,CAEP;;AACA,OAAO,MAAMC,UAAU,GAAIC,SAAD,IAAevB,gBAAgB,CAACmB,GAAjB,CAAsB,IAAGI,SAAU,EAAnC,CAAlC,C,CAEP;;AACA,OAAO,MAAMC,aAAa,GAAID,SAAD,IAAevB,gBAAgB,CAACyB,IAAjB,CAAsB,iBAAtB,EAAyC;AAAEF,EAAAA;AAAF,CAAzC,CAArC,C,CAEP;;AACA,OAAO,MAAMG,aAAa,GAAG,CAACH,SAAD,EAAYI,UAAZ,KAA2B3B,gBAAgB,CAAC4B,GAAjB,CAAsB,IAAGL,SAAU,EAAnC,EAAsCI,UAAtC,CAAjD,C,CAEP;;AACA,OAAO,MAAME,aAAa,GAAIN,SAAD,IAAevB,gBAAgB,CAAC8B,MAAjB,CAAyB,IAAGP,SAAU,EAAtC,CAArC;AAEP,eAAevB,gBAAf","sourcesContent":["// src/api/bookingApi.js\r\nimport axios from 'axios';\r\n\r\nconst bookingApiClient = axios.create({\r\n    baseURL: 'http://localhost:5000/api/bookings',\r\n    withCredentials: true, // Keeps cookies, but JWT from localStorage must still be added\r\n});\r\n\r\n// Add a request interceptor to include the Authorization header with the JWT\r\nbookingApiClient.interceptors.request.use(\r\n    (config) => {\r\n        const token = JSON.parse(localStorage.getItem('user'))?.token;\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n);\r\n\r\n// Fetch all bookings (admin)\r\nexport const getAllBookings = () => bookingApiClient.get('/');\r\n\r\n// Fetch bookings for a specific user\r\nexport const getUserBookings = (userId) => bookingApiClient.get(`/user/${userId}`);\r\n\r\n// Fetch a single booking by ID\r\nexport const getBooking = (bookingId) => bookingApiClient.get(`/${bookingId}`);\r\n\r\n// Cancel a booking\r\nexport const cancelBooking = (bookingId) => bookingApiClient.post('/cancel-booking', { bookingId });\r\n\r\n// Update a booking\r\nexport const updateBooking = (bookingId, updateData) => bookingApiClient.put(`/${bookingId}`, updateData);\r\n\r\n// Delete a booking\r\nexport const deleteBooking = (bookingId) => bookingApiClient.delete(`/${bookingId}`);\r\n\r\nexport default bookingApiClient;\r\n"]},"metadata":{},"sourceType":"module"}