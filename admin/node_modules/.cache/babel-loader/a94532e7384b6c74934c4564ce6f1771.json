{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\BusEase\\\\admin\\\\src\\\\pages\\\\new\\\\New.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./new.scss\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport Navbar from \"../../components/navbar/Navbar\";\nimport DriveFolderUploadOutlinedIcon from \"@mui/icons-material/DriveFolderUploadOutlined\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst New = _ref => {\n  _s();\n\n  let {\n    inputs,\n    title\n  } = _ref;\n  const [file, setFile] = useState(\"\");\n  const [info, setInfo] = useState({});\n\n  const handleChange = e => {\n    const {\n      id,\n      value,\n      type,\n      checked\n    } = e.target;\n    setInfo(prev => ({ ...prev,\n      [id]: type === \"checkbox\" ? checked : value // Handle checkboxes properly\n\n    }));\n  };\n\n  const handleClick = async e => {\n    e.preventDefault();\n    let imgUrl = \"\"; // Upload file to Cloudinary only if file exists\n\n    if (file) {\n      const data = new FormData();\n      data.append(\"file\", file);\n      data.append(\"upload_preset\", \"upload\");\n\n      try {\n        const uploadRes = await axios.post(\"https://api.cloudinary.com/v1_1/dhvb035xa/image/upload\", data);\n        imgUrl = uploadRes.data.url;\n      } catch (err) {\n        console.log(err);\n        return;\n      }\n    } // Construct newUser with image URL if available\n\n\n    const newUser = { ...info,\n      img: imgUrl || undefined // Add image URL only if file exists\n\n    };\n\n    try {\n      await axios.post(\"/schedules\", newUser);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  console.log(info);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: file ? URL.createObjectURL(file) : \"https://icon-library.com/images/no-image-icon/no-image-icon-0.jpg\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"formInput\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file\",\n                children: [\"Image: \", /*#__PURE__*/_jsxDEV(DriveFolderUploadOutlinedIcon, {\n                  className: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"file\",\n                onChange: e => setFile(e.target.files[0]),\n                style: {\n                  display: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"formInput\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: input.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: handleChange,\n                type: input.type,\n                placeholder: input.placeholder,\n                id: input.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)]\n            }, input.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleClick,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(New, \"efdN7S3ybKEFMyRIBZwjw4qP0kc=\");\n\n_c = New;\nexport default New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/BusEase/admin/src/pages/new/New.jsx"],"names":["Sidebar","Navbar","DriveFolderUploadOutlinedIcon","useState","axios","New","inputs","title","file","setFile","info","setInfo","handleChange","e","id","value","type","checked","target","prev","handleClick","preventDefault","imgUrl","data","FormData","append","uploadRes","post","url","err","console","log","newUser","img","undefined","URL","createObjectURL","files","display","map","input","label","placeholder"],"mappings":"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","sourcesContent":["import \"./new.scss\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport DriveFolderUploadOutlinedIcon from \"@mui/icons-material/DriveFolderUploadOutlined\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst New = ({ inputs, title }) => {\r\n  const [file, setFile] = useState(\"\");\r\n  const [info, setInfo] = useState({});\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value, type, checked } = e.target;\r\n    setInfo((prev) => ({\r\n      ...prev,\r\n      [id]: type === \"checkbox\" ? checked : value, // Handle checkboxes properly\r\n    }));\r\n  };\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    let imgUrl = \"\";\r\n  \r\n    // Upload file to Cloudinary only if file exists\r\n    if (file) {\r\n      const data = new FormData();\r\n      data.append(\"file\", file);\r\n      data.append(\"upload_preset\", \"upload\");\r\n      try {\r\n        const uploadRes = await axios.post(\r\n          \"https://api.cloudinary.com/v1_1/dhvb035xa/image/upload\",\r\n          data\r\n        );\r\n        imgUrl = uploadRes.data.url;\r\n      } catch (err) {\r\n        console.log(err);\r\n        return;\r\n      }\r\n    }\r\n  \r\n    // Construct newUser with image URL if available\r\n    const newUser = {\r\n      ...info,\r\n      img: imgUrl || undefined, // Add image URL only if file exists\r\n    };\r\n  \r\n    try {\r\n      await axios.post(\"/schedules\", newUser);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  \r\n\r\n  console.log(info);\r\n  return (\r\n    <div className=\"new\">\r\n      <Sidebar />\r\n      <div className=\"newContainer\">\r\n        <Navbar />\r\n        <div className=\"top\">\r\n          <h1>{title}</h1>\r\n        </div>\r\n        <div className=\"bottom\">\r\n          <div className=\"left\">\r\n            <img\r\n              src={\r\n                file\r\n                  ? URL.createObjectURL(file)\r\n                  : \"https://icon-library.com/images/no-image-icon/no-image-icon-0.jpg\"\r\n              }\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"right\">\r\n            <form>\r\n              <div className=\"formInput\">\r\n                <label htmlFor=\"file\">\r\n                  Image: <DriveFolderUploadOutlinedIcon className=\"icon\" />\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"file\"\r\n                  onChange={(e) => setFile(e.target.files[0])}\r\n                  style={{ display: \"none\" }}\r\n                />\r\n              </div>\r\n\r\n              {inputs.map((input) => (\r\n                <div className=\"formInput\" key={input.id}>\r\n                  <label>{input.label}</label>\r\n                  <input\r\n                    onChange={handleChange}\r\n                    type={input.type}\r\n                    placeholder={input.placeholder}\r\n                    id={input.id}\r\n                  />\r\n                </div>\r\n              ))}\r\n              <button onClick={handleClick}>Send</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default New;"]},"metadata":{},"sourceType":"module"}