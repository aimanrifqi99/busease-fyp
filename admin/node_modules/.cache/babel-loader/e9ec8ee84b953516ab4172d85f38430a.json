{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\BusEase\\\\admin\\\\src\\\\components\\\\BookingManagement\\\\BookingManagement.jsx\",\n    _s = $RefreshSig$();\n\n// src/pages/booking/BookingManagement.jsx\nimport React, { useEffect, useState } from 'react';\nimport { getAllBookings, cancelBooking, deleteBooking, getUserBookings, updateBooking } from '../../api/bookingApi';\nimport './BookingManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookingManagement = () => {\n  _s();\n\n  const [bookings, setBookings] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n  const [selectedBooking, setSelectedBooking] = useState(null);\n  const [formData, setFormData] = useState({\n    status: '',\n    seatNumbers: []\n  });\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchBookings();\n  }, []);\n\n  const fetchBookings = async () => {\n    try {\n      const {\n        data\n      } = await getAllBookings();\n      setBookings(data);\n    } catch (err) {\n      console.error('Error fetching bookings:', err);\n      setError('Failed to fetch bookings');\n    }\n  };\n\n  const handleCancel = async bookingId => {\n    try {\n      const {\n        data\n      } = await cancelBooking(bookingId);\n      setBookings(bookings.map(booking => booking._id === bookingId ? { ...booking,\n        status: 'cancelled'\n      } : booking));\n      alert(data.message);\n    } catch (error) {\n      console.error(\"Error cancelling booking:\", error);\n      alert(\"Error cancelling booking. Please try again.\");\n    }\n  };\n\n  const handleDelete = async bookingId => {\n    if (window.confirm(\"Are you sure you want to delete this booking?\")) {\n      try {\n        await deleteBooking(bookingId);\n        setBookings(bookings.filter(booking => booking._id !== bookingId));\n        alert(\"Booking deleted successfully.\");\n      } catch (error) {\n        console.error(\"Error deleting booking:\", error);\n        alert(\"Error deleting booking. Please try again.\");\n      }\n    }\n  };\n\n  const handleEditClick = async bookingId => {\n    try {\n      const {\n        data\n      } = await getUserBookings(bookingId);\n      setSelectedBooking(data);\n      setFormData({\n        status: data.status,\n        seatNumbers: data.seatNumbers.join(', ') // Convert array to string for input\n\n      });\n      setEditMode(true);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching booking:', err);\n      setError('Failed to fetch booking data');\n    }\n  };\n\n  const handleFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleConfirmEdit = async () => {\n    try {\n      // Convert seatNumbers from string to array of numbers\n      const updatedSeatNumbers = formData.seatNumbers.split(',').map(num => parseInt(num.trim(), 10));\n      const updatedBooking = {\n        status: formData.status,\n        seatNumbers: updatedSeatNumbers\n      };\n      const {\n        data\n      } = await updateBooking(selectedBooking._id, updatedBooking);\n      setBookings(bookings.map(booking => booking._id === selectedBooking._id ? data : booking));\n      setEditMode(false);\n      setSelectedBooking(null);\n      alert(\"Booking updated successfully.\");\n    } catch (err) {\n      console.error('Error updating booking:', err);\n      setError('Failed to update booking');\n    }\n  };\n\n  const handleCancelEdit = () => {\n    setEditMode(false);\n    setSelectedBooking(null);\n    setFormData({\n      status: '',\n      seatNumbers: []\n    });\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bookingManagement\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Booking Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Edit Booking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        value: formData.status,\n        onChange: handleFormChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ongoing\",\n          children: \"Ongoing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cancelled\",\n          children: \"Cancelled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Seat Numbers (comma-separated):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"seatNumbers\",\n        value: formData.seatNumbers,\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConfirmEdit,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancelEdit,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"managementTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Booking ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Schedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Seat Numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Booking Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: bookings.map(booking => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: booking._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: booking.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [booking.schedule.name, \" (\", booking.schedule.origin, \" - \", booking.schedule.destination, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: booking.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: booking.seatNumbers.join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", booking.totalPrice.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(booking.bookingDate).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditClick(booking._id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: booking.status === 'cancelled' || booking.status === 'completed',\n              onClick: () => handleCancel(booking._id),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(booking._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this)]\n        }, booking._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookingManagement, \"HRfAqTNb3RiaJ0lAukFd66vH0xE=\");\n\n_c = BookingManagement;\nexport default BookingManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookingManagement\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/BusEase/admin/src/components/BookingManagement/BookingManagement.jsx"],"names":["React","useEffect","useState","getAllBookings","cancelBooking","deleteBooking","getUserBookings","updateBooking","BookingManagement","bookings","setBookings","editMode","setEditMode","selectedBooking","setSelectedBooking","formData","setFormData","status","seatNumbers","error","setError","fetchBookings","data","err","console","handleCancel","bookingId","map","booking","_id","alert","message","handleDelete","window","confirm","filter","handleEditClick","join","handleFormChange","e","name","value","target","handleConfirmEdit","updatedSeatNumbers","split","num","parseInt","trim","updatedBooking","handleCancelEdit","schedule","origin","destination","user","username","totalPrice","toFixed","Date","bookingDate","toLocaleDateString"],"mappings":"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","sourcesContent":["// src/pages/booking/BookingManagement.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getAllBookings, cancelBooking, deleteBooking, getUserBookings, updateBooking } from '../../api/bookingApi';\r\nimport './BookingManagement.css';\r\n\r\nconst BookingManagement = () => {\r\n    const [bookings, setBookings] = useState([]);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [selectedBooking, setSelectedBooking] = useState(null);\r\n    const [formData, setFormData] = useState({\r\n        status: '',\r\n        seatNumbers: [],\r\n    });\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchBookings();\r\n    }, []);\r\n\r\n    const fetchBookings = async () => {\r\n        try {\r\n            const { data } = await getAllBookings();\r\n            setBookings(data);\r\n        } catch (err) {\r\n            console.error('Error fetching bookings:', err);\r\n            setError('Failed to fetch bookings');\r\n        }\r\n    };\r\n\r\n    const handleCancel = async (bookingId) => {\r\n        try {\r\n            const { data } = await cancelBooking(bookingId);\r\n            setBookings(bookings.map(booking =>\r\n                booking._id === bookingId ? { ...booking, status: 'cancelled' } : booking\r\n            ));\r\n            alert(data.message);\r\n        } catch (error) {\r\n            console.error(\"Error cancelling booking:\", error);\r\n            alert(\"Error cancelling booking. Please try again.\");\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (bookingId) => {\r\n        if (window.confirm(\"Are you sure you want to delete this booking?\")) {\r\n            try {\r\n                await deleteBooking(bookingId);\r\n                setBookings(bookings.filter(booking => booking._id !== bookingId));\r\n                alert(\"Booking deleted successfully.\");\r\n            } catch (error) {\r\n                console.error(\"Error deleting booking:\", error);\r\n                alert(\"Error deleting booking. Please try again.\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleEditClick = async (bookingId) => {\r\n        try {\r\n            const { data } = await getUserBookings(bookingId);\r\n            setSelectedBooking(data);\r\n            setFormData({\r\n                status: data.status,\r\n                seatNumbers: data.seatNumbers.join(', '), // Convert array to string for input\r\n            });\r\n            setEditMode(true);\r\n            setError(null);\r\n        } catch (err) {\r\n            console.error('Error fetching booking:', err);\r\n            setError('Failed to fetch booking data');\r\n        }\r\n    };\r\n\r\n    const handleFormChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleConfirmEdit = async () => {\r\n        try {\r\n            // Convert seatNumbers from string to array of numbers\r\n            const updatedSeatNumbers = formData.seatNumbers.split(',').map(num => parseInt(num.trim(), 10));\r\n\r\n            const updatedBooking = {\r\n                status: formData.status,\r\n                seatNumbers: updatedSeatNumbers,\r\n            };\r\n\r\n            const { data } = await updateBooking(selectedBooking._id, updatedBooking);\r\n\r\n            setBookings(bookings.map(booking =>\r\n                booking._id === selectedBooking._id ? data : booking\r\n            ));\r\n            setEditMode(false);\r\n            setSelectedBooking(null);\r\n            alert(\"Booking updated successfully.\");\r\n        } catch (err) {\r\n            console.error('Error updating booking:', err);\r\n            setError('Failed to update booking');\r\n        }\r\n    };\r\n\r\n    const handleCancelEdit = () => {\r\n        setEditMode(false);\r\n        setSelectedBooking(null);\r\n        setFormData({\r\n            status: '',\r\n            seatNumbers: [],\r\n        });\r\n        setError(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bookingManagement\">\r\n            <h3>Booking Management</h3>\r\n            {error && <div className=\"error\">{error}</div>}\r\n            {editMode ? (\r\n                <div className=\"editForm\">\r\n                    <h4>Edit Booking</h4>\r\n                    <label>Status:</label>\r\n                    <select name=\"status\" value={formData.status} onChange={handleFormChange}>\r\n                        <option value=\"ongoing\">Ongoing</option>\r\n                        <option value=\"completed\">Completed</option>\r\n                        <option value=\"cancelled\">Cancelled</option>\r\n                    </select>\r\n                    <label>Seat Numbers (comma-separated):</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"seatNumbers\"\r\n                        value={formData.seatNumbers}\r\n                        onChange={handleFormChange}\r\n                    />\r\n                    <button onClick={handleConfirmEdit}>Save Changes</button>\r\n                    <button onClick={handleCancelEdit}>Cancel</button>\r\n                </div>\r\n            ) : (\r\n                <table className=\"managementTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Booking ID</th>\r\n                            <th>Status</th>\r\n                            <th>Schedule</th>\r\n                            <th>User</th>\r\n                            <th>Seat Numbers</th>\r\n                            <th>Total Price</th>\r\n                            <th>Booking Date</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {bookings.map(booking => (\r\n                            <tr key={booking._id}>\r\n                                <td>{booking._id}</td>\r\n                                <td>{booking.status}</td>\r\n                                <td>{booking.schedule.name} ({booking.schedule.origin} - {booking.schedule.destination})</td>\r\n                                <td>{booking.user.username}</td>\r\n                                <td>{booking.seatNumbers.join(', ')}</td>\r\n                                <td>${booking.totalPrice.toFixed(2)}</td>\r\n                                <td>{new Date(booking.bookingDate).toLocaleDateString()}</td>\r\n                                <td>\r\n                                    <button onClick={() => handleEditClick(booking._id)}>Edit</button>\r\n                                    <button\r\n                                        disabled={booking.status === 'cancelled' || booking.status === 'completed'}\r\n                                        onClick={() => handleCancel(booking._id)}\r\n                                    >\r\n                                        Cancel\r\n                                    </button>\r\n                                    <button onClick={() => handleDelete(booking._id)}>Delete</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookingManagement;\r\n"]},"metadata":{},"sourceType":"module"}