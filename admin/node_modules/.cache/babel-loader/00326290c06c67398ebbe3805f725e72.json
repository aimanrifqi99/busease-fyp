{"ast":null,"code":"// scheduleApi.js\nimport axios from 'axios';\nconst scheduleApiClient = axios.create({\n  baseURL: 'http://localhost:5000/api/schedules',\n  withCredentials: true // Keeps cookies, but JWT from localStorage must still be added\n\n}); // Add a request interceptor to include the Authorization header with the JWT\n\nscheduleApiClient.interceptors.request.use(config => {\n  var _JSON$parse;\n\n  const token = (_JSON$parse = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.token;\n\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n}, error => Promise.reject(error));\nexport const getSchedules = () => scheduleApiClient.get('/');\nexport const getSchedule = id => scheduleApiClient.get(`/${id}`);\nexport const createSchedule = data => scheduleApiClient.post('/', data);\nexport const updateSchedule = (id, data) => scheduleApiClient.put(`/${id}`, data);\nexport const deleteSchedule = id => scheduleApiClient.delete(`/${id}`);\nexport default scheduleApiClient;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/BusEase/admin/src/api/scheduleApi.js"],"names":["axios","scheduleApiClient","create","baseURL","withCredentials","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","headers","Authorization","error","Promise","reject","getSchedules","get","getSchedule","id","createSchedule","data","post","updateSchedule","put","deleteSchedule","delete"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAN,CAAa;AACnCC,EAAAA,OAAO,EAAE,qCAD0B;AAEnCC,EAAAA,eAAe,EAAE,IAFkB,CAEZ;;AAFY,CAAb,CAA1B,C,CAKA;;AACAH,iBAAiB,CAACI,YAAlB,CAA+BC,OAA/B,CAAuCC,GAAvC,CACKC,MAAD,IAAY;AAAA;;AACR,QAAMC,KAAK,kBAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAH,gDAAG,YAA0CJ,KAAxD;;AACA,MAAIA,KAAJ,EAAW;AACPD,IAAAA,MAAM,CAACM,OAAP,CAAeC,aAAf,GAAgC,UAASN,KAAM,EAA/C;AACH;;AACD,SAAOD,MAAP;AACH,CAPL,EAQKQ,KAAD,IAAWC,OAAO,CAACC,MAAR,CAAeF,KAAf,CARf;AAWA,OAAO,MAAMG,YAAY,GAAG,MAAMlB,iBAAiB,CAACmB,GAAlB,CAAsB,GAAtB,CAA3B;AACP,OAAO,MAAMC,WAAW,GAAIC,EAAD,IAAQrB,iBAAiB,CAACmB,GAAlB,CAAuB,IAAGE,EAAG,EAA7B,CAA5B;AACP,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAUvB,iBAAiB,CAACwB,IAAlB,CAAuB,GAAvB,EAA4BD,IAA5B,CAAjC;AACP,OAAO,MAAME,cAAc,GAAG,CAACJ,EAAD,EAAKE,IAAL,KAAcvB,iBAAiB,CAAC0B,GAAlB,CAAuB,IAAGL,EAAG,EAA7B,EAAgCE,IAAhC,CAArC;AACP,OAAO,MAAMI,cAAc,GAAIN,EAAD,IAAQrB,iBAAiB,CAAC4B,MAAlB,CAA0B,IAAGP,EAAG,EAAhC,CAA/B;AAEP,eAAerB,iBAAf","sourcesContent":["// scheduleApi.js\r\nimport axios from 'axios';\r\n\r\nconst scheduleApiClient = axios.create({\r\n    baseURL: 'http://localhost:5000/api/schedules',\r\n    withCredentials: true, // Keeps cookies, but JWT from localStorage must still be added\r\n});\r\n\r\n// Add a request interceptor to include the Authorization header with the JWT\r\nscheduleApiClient.interceptors.request.use(\r\n    (config) => {\r\n        const token = JSON.parse(localStorage.getItem('user'))?.token;\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n);\r\n\r\nexport const getSchedules = () => scheduleApiClient.get('/');\r\nexport const getSchedule = (id) => scheduleApiClient.get(`/${id}`);\r\nexport const createSchedule = (data) => scheduleApiClient.post('/', data);\r\nexport const updateSchedule = (id, data) => scheduleApiClient.put(`/${id}`, data);\r\nexport const deleteSchedule = (id) => scheduleApiClient.delete(`/${id}`);\r\n\r\nexport default scheduleApiClient;\r\n"]},"metadata":{},"sourceType":"module"}