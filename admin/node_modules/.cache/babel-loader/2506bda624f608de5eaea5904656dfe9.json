{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\BusEase\\\\admin\\\\src\\\\components\\\\UserManagement\\\\UserManagement.jsx\",\n    _s = $RefreshSig$();\n\n// src/pages/user/UserManagement.jsx\nimport React, { useEffect, useState } from 'react';\nimport { getUsers, deleteUser, updateUser } from '../../api/userApi';\nimport './UserManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserManagement = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const {\n          data\n        } = await getUsers();\n        setUsers(data);\n      } catch (err) {\n        setError('Failed to fetch users');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  const handleDelete = async id => {\n    try {\n      await deleteUser(id);\n      setUsers(users.filter(user => user._id !== id));\n    } catch (err) {\n      console.error('Failed to delete user:', err);\n      setError('Failed to delete user');\n    }\n  };\n\n  const handleUpdate = async id => {\n    const username = prompt('Enter new username:');\n\n    if (username) {\n      try {\n        const {\n          data\n        } = await updateUser(id, {\n          username\n        });\n        setUsers(users.map(user => user._id === id ? { ...user,\n          username: data.username\n        } : user));\n      } catch (err) {\n        console.error('Failed to update user:', err);\n        setError('Failed to update user');\n      }\n    }\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading users...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userManagement\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"managementTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdate(user._id),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(user._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserManagement, \"vvG5G9m+JVa2SSWAm277lQVAKio=\");\n\n_c = UserManagement;\nexport default UserManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/BusEase/admin/src/components/UserManagement/UserManagement.jsx"],"names":["React","useEffect","useState","getUsers","deleteUser","updateUser","UserManagement","users","setUsers","loading","setLoading","error","setError","fetchUsers","data","err","console","handleDelete","id","filter","user","_id","handleUpdate","username","prompt","map","email"],"mappings":"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","sourcesContent":["// src/pages/user/UserManagement.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getUsers, deleteUser, updateUser } from '../../api/userApi';\r\nimport './UserManagement.css';\r\n\r\nconst UserManagement = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const { data } = await getUsers();\r\n                setUsers(data);\r\n            } catch (err) {\r\n                setError('Failed to fetch users');\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await deleteUser(id);\r\n            setUsers(users.filter(user => user._id !== id));\r\n        } catch (err) {\r\n            console.error('Failed to delete user:', err);\r\n            setError('Failed to delete user');\r\n        }\r\n    };\r\n\r\n    const handleUpdate = async (id) => {\r\n        const username = prompt('Enter new username:');\r\n        if (username) {\r\n            try {\r\n                const { data } = await updateUser(id, { username });\r\n                setUsers(users.map(user => user._id === id ? { ...user, username: data.username } : user));\r\n            } catch (err) {\r\n                console.error('Failed to update user:', err);\r\n                setError('Failed to update user');\r\n            }\r\n        }\r\n    };\r\n\r\n    if (loading) return <div>Loading users...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <div className=\"userManagement\">\r\n            <table className=\"managementTable\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Username</th>\r\n                        <th>Email</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map(user => (\r\n                        <tr key={user._id}>\r\n                            <td>{user.username}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>\r\n                                <button onClick={() => handleUpdate(user._id)}>Update</button>\r\n                                <button onClick={() => handleDelete(user._id)}>Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserManagement;\r\n"]},"metadata":{},"sourceType":"module"}