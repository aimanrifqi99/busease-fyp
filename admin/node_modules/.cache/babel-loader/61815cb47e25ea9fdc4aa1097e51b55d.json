{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\BusEase\\\\admin\\\\src\\\\components\\\\datatable\\\\Datatable.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./datatable.scss\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { userColumns } from \"../../datatablesource\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport useFetch from \"../../hooks/useFetch\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Datatable = _ref => {\n  _s();\n\n  let {\n    colomns\n  } = _ref;\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[1];\n  const [list, setList] = useState([]); // Set an initial empty array\n\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`/${path}`);\n  useEffect(() => {\n    setList(data || []); // Ensure data is always an array\n  }, [data]);\n\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`/${path}/${id}`);\n      setList(list.filter(item => item._id !== id));\n    } catch (err) {\n      console.error(\"Failed to delete item:\", err);\n    }\n  };\n\n  const actionColumn = [{\n    field: \"action\",\n    headerName: \"Action\",\n    width: 200,\n    flex: 1,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cellAction\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/users/test\",\n          style: {\n            textDecoration: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"viewButton\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deleteButton\",\n          onClick: () => handleDelete(params.row._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error loading data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"datatable\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"datatableTitle\",\n      children: [\"Add New User\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/users/new\",\n        className: \"link\",\n        children: \"Add New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DataGrid, {\n      className: \"datagrid\",\n      rows: list,\n      columns: [...colomns, ...actionColumn] // Action column is last\n      ,\n      pageSize: 9,\n      rowsPerPageOptions: [9],\n      checkboxSelection: true,\n      getRowId: row => row._id,\n      disableColumnResize: true // Disable auto column resizing\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Datatable, \"1eT+v/ft4kFKGXEYmELG6RZkJuE=\", false, function () {\n  return [useLocation, useFetch];\n});\n\n_c = Datatable;\nexport default Datatable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Datatable\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/BusEase/admin/src/components/datatable/Datatable.jsx"],"names":["DataGrid","userColumns","Link","useLocation","useEffect","useState","useFetch","axios","Datatable","colomns","location","path","pathname","split","list","setList","data","loading","error","handleDelete","id","delete","filter","item","_id","err","console","actionColumn","field","headerName","width","flex","renderCell","params","textDecoration","row"],"mappings":"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","sourcesContent":["import \"./datatable.scss\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { userColumns } from \"../../datatablesource\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport axios from \"axios\";\r\n\r\nconst Datatable = ({colomns}) => {\r\n  const location = useLocation();\r\n  const path = location.pathname.split(\"/\")[1];\r\n  const [list, setList] = useState([]); // Set an initial empty array\r\n  const { data, loading, error } = useFetch(`/${path}`);\r\n\r\n  useEffect(() => {\r\n    setList(data || []); // Ensure data is always an array\r\n  }, [data]);\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`/${path}/${id}`);\r\n      setList(list.filter((item) => item._id !== id));\r\n    } catch (err) {\r\n      console.error(\"Failed to delete item:\", err);\r\n    }\r\n  };\r\n\r\n  const actionColumn = [\r\n    {\r\n      field: \"action\",\r\n      headerName: \"Action\",\r\n      width: 200,\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"cellAction\">\r\n            <Link to=\"/users/test\" style={{ textDecoration: \"none\" }}>\r\n              <div className=\"viewButton\">View</div>\r\n            </Link>\r\n            <div\r\n              className=\"deleteButton\"\r\n              onClick={() => handleDelete(params.row._id)}\r\n            >\r\n              Delete\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  if (error) {\r\n    return <div>Error loading data</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"datatable\">\r\n      <div className=\"datatableTitle\">\r\n        Add New User\r\n        <Link to=\"/users/new\" className=\"link\">\r\n          Add New\r\n        </Link>\r\n      </div>\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <DataGrid\r\n          className=\"datagrid\"\r\n          rows={list}\r\n          columns={[...colomns, ...actionColumn]} // Action column is last\r\n          pageSize={9}\r\n          rowsPerPageOptions={[9]}\r\n          checkboxSelection\r\n          getRowId={(row) => row._id}\r\n          disableColumnResize={true} // Disable auto column resizing\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Datatable;\r\n"]},"metadata":{},"sourceType":"module"}