{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\BusEase\\\\admin\\\\src\\\\components\\\\BookingManagement\\\\BookingManagement.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getUserBookings, cancelBooking } from '../../api/bookingApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookingManagement = () => {\n  _s();\n\n  var _JSON$parse;\n\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const userId = (_JSON$parse = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.id; // Retrieve user ID from local storage\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      try {\n        setLoading(true);\n        const {\n          data\n        } = await getUserBookings(userId);\n        setBookings(data);\n      } catch (err) {\n        setError(\"Error fetching bookings. Please try again later.\");\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (userId) fetchBookings();\n  }, [userId]);\n\n  const handleCancel = async bookingId => {\n    try {\n      const {\n        data\n      } = await cancelBooking(bookingId);\n      setBookings(prevBookings => prevBookings.map(booking => booking._id === bookingId ? { ...booking,\n        status: 'cancelled'\n      } : booking));\n      alert(data.message); // Provide feedback to the user\n    } catch (err) {\n      setError(\"Error canceling booking. Please try again later.\");\n      console.error(err);\n    }\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading bookings...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Booking Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), bookings.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: bookings.map(booking => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Booking ID: \", booking._id, \", Status: \", booking.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: booking.status === 'cancelled' || booking.status === 'completed',\n          onClick: () => handleCancel(booking._id),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this)]\n      }, booking._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No bookings available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookingManagement, \"PAEPq2PViva62REBsNTRmIygMHA=\");\n\n_c = BookingManagement;\nexport default BookingManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookingManagement\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/BusEase/admin/src/components/BookingManagement/BookingManagement.jsx"],"names":["React","useEffect","useState","getUserBookings","cancelBooking","BookingManagement","bookings","setBookings","loading","setLoading","error","setError","userId","JSON","parse","localStorage","getItem","id","fetchBookings","data","err","console","handleCancel","bookingId","prevBookings","map","booking","_id","status","alert","message","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getUserBookings, cancelBooking } from '../../api/bookingApi';\r\n\r\nconst BookingManagement = () => {\r\n    const [bookings, setBookings] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const userId = JSON.parse(localStorage.getItem('user'))?.id; // Retrieve user ID from local storage\r\n\r\n    useEffect(() => {\r\n        const fetchBookings = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const { data } = await getUserBookings(userId);\r\n                setBookings(data);\r\n            } catch (err) {\r\n                setError(\"Error fetching bookings. Please try again later.\");\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (userId) fetchBookings();\r\n    }, [userId]);\r\n\r\n    const handleCancel = async (bookingId) => {\r\n        try {\r\n            const { data } = await cancelBooking(bookingId);\r\n            setBookings((prevBookings) =>\r\n                prevBookings.map((booking) =>\r\n                    booking._id === bookingId ? { ...booking, status: 'cancelled' } : booking\r\n                )\r\n            );\r\n            alert(data.message); // Provide feedback to the user\r\n        } catch (err) {\r\n            setError(\"Error canceling booking. Please try again later.\");\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    if (loading) return <p>Loading bookings...</p>;\r\n    if (error) return <p>{error}</p>;\r\n\r\n    return (\r\n        <div>\r\n            <h3>Booking Management</h3>\r\n            {bookings.length > 0 ? (\r\n                <ul>\r\n                    {bookings.map((booking) => (\r\n                        <li key={booking._id}>\r\n                            <p>Booking ID: {booking._id}, Status: {booking.status}</p>\r\n                            <button\r\n                                disabled={booking.status === 'cancelled' || booking.status === 'completed'}\r\n                                onClick={() => handleCancel(booking._id)}\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No bookings available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookingManagement;\r\n"]},"metadata":{},"sourceType":"module"}