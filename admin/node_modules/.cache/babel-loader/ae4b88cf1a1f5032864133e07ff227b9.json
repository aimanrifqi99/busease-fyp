{"ast":null,"code":"// userApi.js\nimport axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api'\n}); // Add an interceptor to include the token in every request\n\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`; // Attach token to request\n  }\n\n  return config;\n});\nexport const getUsers = () => API.get('/users');\nexport const deleteUser = id => API.delete(`/users/${id}`);\nexport const updateUser = (id, updatedData) => API.put(`/users/${id}`, updatedData);","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/BusEase/admin/src/api/userApi.js"],"names":["axios","API","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","getUsers","get","deleteUser","id","delete","updateUser","updatedData","put"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAE;AADY,CAAb,CAAZ,C,CAIA;;AACAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,MAAD,IAAY;AACrC,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAIF,KAAJ,EAAW;AACPD,IAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgC,UAASJ,KAAM,EAA/C,CADO,CAC2C;AACrD;;AACD,SAAOD,MAAP;AACH,CAND;AAQA,OAAO,MAAMM,QAAQ,GAAG,MAAMZ,GAAG,CAACa,GAAJ,CAAQ,QAAR,CAAvB;AACP,OAAO,MAAMC,UAAU,GAAIC,EAAD,IAAQf,GAAG,CAACgB,MAAJ,CAAY,UAASD,EAAG,EAAxB,CAA3B;AACP,OAAO,MAAME,UAAU,GAAG,CAACF,EAAD,EAAKG,WAAL,KAAqBlB,GAAG,CAACmB,GAAJ,CAAS,UAASJ,EAAG,EAArB,EAAwBG,WAAxB,CAAxC","sourcesContent":["// userApi.js\r\nimport axios from 'axios';\r\n\r\nconst API = axios.create({\r\n    baseURL: 'http://localhost:5000/api',\r\n});\r\n\r\n// Add an interceptor to include the token in every request\r\nAPI.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`; // Attach token to request\r\n    }\r\n    return config;\r\n});\r\n\r\nexport const getUsers = () => API.get('/users');\r\nexport const deleteUser = (id) => API.delete(`/users/${id}`);\r\nexport const updateUser = (id, updatedData) => API.put(`/users/${id}`, updatedData);\r\n"]},"metadata":{},"sourceType":"module"}