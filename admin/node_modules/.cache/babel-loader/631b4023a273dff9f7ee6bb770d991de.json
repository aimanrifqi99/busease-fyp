{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\BusEase\\\\admin\\\\src\\\\components\\\\UserManagement\\\\UserManagement.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { getUsers, deleteUser, updateUser, getUser } from '../../api/userApi';\nimport './UserManagement.css';\nimport DriveFolderUploadOutlinedIcon from '@mui/icons-material/DriveFolderUploadOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultProfilePic = \"https://static.thenounproject.com/png/638636-200.png\";\n\nconst UserManagement = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    img: ''\n  });\n  const [file, setFile] = useState(null);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const {\n          data\n        } = await getUsers();\n        setUsers(data);\n      } catch (err) {\n        setError('Failed to fetch users');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  const handleEditClick = async id => {\n    try {\n      const {\n        data\n      } = await getUser(id);\n      setSelectedUser(data);\n      setFormData({\n        username: data.username,\n        email: data.email,\n        img: data.img\n      });\n      setEditMode(true);\n    } catch (err) {\n      console.error('Failed to fetch user data:', err);\n      setError('Failed to fetch user data');\n    }\n  };\n\n  const handleFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleConfirmEdit = async () => {\n    setError(null);\n    let imgUrl = formData.img;\n\n    if (file) {\n      const data = new FormData();\n      data.append('file', file);\n      data.append('upload_preset', 'upload'); // Cloudinary preset\n\n      try {\n        const uploadRes = await axios.post('https://api.cloudinary.com/v1_1/dhvb035xa/image/upload', data);\n        imgUrl = uploadRes.data.url;\n      } catch (err) {\n        setError('Failed to upload image');\n        return;\n      }\n    }\n\n    try {\n      const {\n        data\n      } = await updateUser(selectedUser._id, { ...formData,\n        img: imgUrl\n      });\n      setUsers(users.map(user => user._id === selectedUser._id ? data : user));\n      setEditMode(false);\n      setSelectedUser(null);\n    } catch (err) {\n      console.error('Failed to update user:', err);\n      setError('Failed to update user');\n    }\n  };\n\n  const handleDelete = async id => {\n    try {\n      await deleteUser(id);\n      setUsers(users.filter(user => user._id !== id));\n    } catch (err) {\n      console.error('Failed to delete user:', err);\n      setError('Failed to delete user');\n    }\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading users...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userManagement\",\n    children: editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageUploadSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          className: \"imageUploadLabel\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: file ? URL.createObjectURL(file) : formData.img || defaultProfilePic,\n            alt: \"Profile Preview\",\n            className: \"editProfilePic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DriveFolderUploadOutlinedIcon, {\n            className: \"uploadIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          onChange: handleFileChange,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConfirmEdit,\n        children: \"Confirm Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditMode(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"managementTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.img || defaultProfilePic,\n              alt: \"User Profile\",\n              className: \"userTablePic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditClick(user._id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(user._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 33\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserManagement, \"+//Rax4Kb8e0D0rhEl2pMXOkEeE=\");\n\n_c = UserManagement;\nexport default UserManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/BusEase/admin/src/components/UserManagement/UserManagement.jsx"],"names":["React","useEffect","useState","axios","getUsers","deleteUser","updateUser","getUser","DriveFolderUploadOutlinedIcon","defaultProfilePic","UserManagement","users","setUsers","loading","setLoading","error","setError","selectedUser","setSelectedUser","editMode","setEditMode","formData","setFormData","username","email","img","file","setFile","fetchUsers","data","err","console","handleEditClick","id","handleFormChange","e","name","value","target","handleFileChange","files","handleConfirmEdit","imgUrl","FormData","append","uploadRes","post","url","_id","map","user","handleDelete","filter","URL","createObjectURL","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,EAA2CC,OAA3C,QAA0D,mBAA1D;AACA,OAAO,sBAAP;AACA,OAAOC,6BAAP,MAA0C,+CAA1C;;AAEA,MAAMC,iBAAiB,GAAG,sDAA1B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC;AACrCqB,IAAAA,QAAQ,EAAE,EAD2B;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,GAAG,EAAE;AAHgC,GAAD,CAAxC;AAKA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBzB,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM2B,UAAU,GAAG,YAAY;AAC3B,UAAI;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMzB,QAAQ,EAA/B;AACAQ,QAAAA,QAAQ,CAACiB,IAAD,CAAR;AACH,OAHD,CAGE,OAAOC,GAAP,EAAY;AACVd,QAAAA,QAAQ,CAAC,uBAAD,CAAR;AACAe,QAAAA,OAAO,CAAChB,KAAR,CAAce,GAAd;AACH,OAND,SAMU;AACNhB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KAVD;;AAWAc,IAAAA,UAAU;AACb,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMI,eAAe,GAAG,MAAOC,EAAP,IAAc;AAClC,QAAI;AACA,YAAM;AAAEJ,QAAAA;AAAF,UAAW,MAAMtB,OAAO,CAAC0B,EAAD,CAA9B;AACAf,MAAAA,eAAe,CAACW,IAAD,CAAf;AACAP,MAAAA,WAAW,CAAC;AAAEC,QAAAA,QAAQ,EAAEM,IAAI,CAACN,QAAjB;AAA2BC,QAAAA,KAAK,EAAEK,IAAI,CAACL,KAAvC;AAA8CC,QAAAA,GAAG,EAAEI,IAAI,CAACJ;AAAxD,OAAD,CAAX;AACAL,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KALD,CAKE,OAAOU,GAAP,EAAY;AACVC,MAAAA,OAAO,CAAChB,KAAR,CAAc,4BAAd,EAA4Ce,GAA5C;AACAd,MAAAA,QAAQ,CAAC,2BAAD,CAAR;AACH;AACJ,GAVD;;AAYA,QAAMkB,gBAAgB,GAAIC,CAAD,IAAO;AAC5B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAhB,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACe,IAAD,GAAQC;AAAvB,KAAD,CAAX;AACH,GAHD;;AAKA,QAAME,gBAAgB,GAAIJ,CAAD,IAAO;AAC5BR,IAAAA,OAAO,CAACQ,CAAC,CAACG,MAAF,CAASE,KAAT,CAAe,CAAf,CAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,YAAY;AAClCzB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,QAAI0B,MAAM,GAAGrB,QAAQ,CAACI,GAAtB;;AAEA,QAAIC,IAAJ,EAAU;AACN,YAAMG,IAAI,GAAG,IAAIc,QAAJ,EAAb;AACAd,MAAAA,IAAI,CAACe,MAAL,CAAY,MAAZ,EAAoBlB,IAApB;AACAG,MAAAA,IAAI,CAACe,MAAL,CAAY,eAAZ,EAA6B,QAA7B,EAHM,CAGkC;;AAExC,UAAI;AACA,cAAMC,SAAS,GAAG,MAAM1C,KAAK,CAAC2C,IAAN,CACpB,wDADoB,EAEpBjB,IAFoB,CAAxB;AAIAa,QAAAA,MAAM,GAAGG,SAAS,CAAChB,IAAV,CAAekB,GAAxB;AACH,OAND,CAME,OAAOjB,GAAP,EAAY;AACVd,QAAAA,QAAQ,CAAC,wBAAD,CAAR;AACA;AACH;AACJ;;AAED,QAAI;AACA,YAAM;AAAEa,QAAAA;AAAF,UAAW,MAAMvB,UAAU,CAACW,YAAY,CAAC+B,GAAd,EAAmB,EAAE,GAAG3B,QAAL;AAAeI,QAAAA,GAAG,EAAEiB;AAApB,OAAnB,CAAjC;AACA9B,MAAAA,QAAQ,CAACD,KAAK,CAACsC,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACF,GAAL,KAAa/B,YAAY,CAAC+B,GAA1B,GAAgCnB,IAAhC,GAAuCqB,IAAzD,CAAD,CAAR;AACA9B,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH,KALD,CAKE,OAAOY,GAAP,EAAY;AACVC,MAAAA,OAAO,CAAChB,KAAR,CAAc,wBAAd,EAAwCe,GAAxC;AACAd,MAAAA,QAAQ,CAAC,uBAAD,CAAR;AACH;AACJ,GA9BD;;AAgCA,QAAMmC,YAAY,GAAG,MAAOlB,EAAP,IAAc;AAC/B,QAAI;AACA,YAAM5B,UAAU,CAAC4B,EAAD,CAAhB;AACArB,MAAAA,QAAQ,CAACD,KAAK,CAACyC,MAAN,CAAaF,IAAI,IAAIA,IAAI,CAACF,GAAL,KAAaf,EAAlC,CAAD,CAAR;AACH,KAHD,CAGE,OAAOH,GAAP,EAAY;AACVC,MAAAA,OAAO,CAAChB,KAAR,CAAc,wBAAd,EAAwCe,GAAxC;AACAd,MAAAA,QAAQ,CAAC,uBAAD,CAAR;AACH;AACJ,GARD;;AAUA,MAAIH,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIE,KAAJ,EAAW,oBAAO;AAAA,cAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACKI,QAAQ,gBACL;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAsB,UAAA,SAAS,EAAC,kBAAhC;AAAA,kCACI;AACI,YAAA,GAAG,EACCO,IAAI,GACE2B,GAAG,CAACC,eAAJ,CAAoB5B,IAApB,CADF,GAEEL,QAAQ,CAACI,GAAT,IAAgBhB,iBAJ9B;AAMI,YAAA,GAAG,EAAC,iBANR;AAOI,YAAA,SAAS,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI,QAAC,6BAAD;AAA+B,YAAA,SAAS,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAaI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,EAAE,EAAC,MAFP;AAGI,UAAA,QAAQ,EAAE8B,gBAHd;AAII,UAAA,KAAK,EAAE;AAAEgB,YAAAA,OAAO,EAAE;AAAX;AAJX;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ,eAuBI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,KAAK,EAAElC,QAAQ,CAACE,QAHpB;AAII,QAAA,QAAQ,EAAEW;AAJd;AAAA;AAAA;AAAA;AAAA,cAvBJ,eA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BJ,eA8BI;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,KAAK,EAAEb,QAAQ,CAACG,KAHpB;AAII,QAAA,QAAQ,EAAEU;AAJd;AAAA;AAAA;AAAA;AAAA,cA9BJ,eAoCI;AAAQ,QAAA,OAAO,EAAEO,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCJ,eAqCI;AAAQ,QAAA,OAAO,EAAE,MAAMrB,WAAW,CAAC,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBAyCL;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,kBACKT,KAAK,CAACsC,GAAN,CAAUC,IAAI,iBACX;AAAA,kCACI;AAAA,mCACI;AACI,cAAA,GAAG,EAAEA,IAAI,CAACzB,GAAL,IAAYhB,iBADrB;AAEI,cAAA,GAAG,EAAC,cAFR;AAGI,cAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AAAA,sBAAKyC,IAAI,CAAC3B;AAAV;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI;AAAA,sBAAK2B,IAAI,CAAC1B;AAAV;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI;AAAA,oCACI;AAAQ,cAAA,OAAO,EAAE,MAAMQ,eAAe,CAACkB,IAAI,CAACF,GAAN,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,OAAO,EAAE,MAAMG,YAAY,CAACD,IAAI,CAACF,GAAN,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA,WAASE,IAAI,CAACF,GAAd;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AA1CR;AAAA;AAAA;AAAA;AAAA,UADJ;AA2EH,CAzKD;;GAAMtC,c;;KAAAA,c;AA2KN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { getUsers, deleteUser, updateUser, getUser } from '../../api/userApi';\r\nimport './UserManagement.css';\r\nimport DriveFolderUploadOutlinedIcon from '@mui/icons-material/DriveFolderUploadOutlined';\r\n\r\nconst defaultProfilePic = \"https://static.thenounproject.com/png/638636-200.png\";\r\n\r\nconst UserManagement = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',\r\n        img: '',\r\n    });\r\n    const [file, setFile] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const { data } = await getUsers();\r\n                setUsers(data);\r\n            } catch (err) {\r\n                setError('Failed to fetch users');\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const handleEditClick = async (id) => {\r\n        try {\r\n            const { data } = await getUser(id);\r\n            setSelectedUser(data);\r\n            setFormData({ username: data.username, email: data.email, img: data.img });\r\n            setEditMode(true);\r\n        } catch (err) {\r\n            console.error('Failed to fetch user data:', err);\r\n            setError('Failed to fetch user data');\r\n        }\r\n    };\r\n\r\n    const handleFormChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleConfirmEdit = async () => {\r\n        setError(null);\r\n        let imgUrl = formData.img;\r\n\r\n        if (file) {\r\n            const data = new FormData();\r\n            data.append('file', file);\r\n            data.append('upload_preset', 'upload'); // Cloudinary preset\r\n\r\n            try {\r\n                const uploadRes = await axios.post(\r\n                    'https://api.cloudinary.com/v1_1/dhvb035xa/image/upload',\r\n                    data\r\n                );\r\n                imgUrl = uploadRes.data.url;\r\n            } catch (err) {\r\n                setError('Failed to upload image');\r\n                return;\r\n            }\r\n        }\r\n\r\n        try {\r\n            const { data } = await updateUser(selectedUser._id, { ...formData, img: imgUrl });\r\n            setUsers(users.map(user => user._id === selectedUser._id ? data : user));\r\n            setEditMode(false);\r\n            setSelectedUser(null);\r\n        } catch (err) {\r\n            console.error('Failed to update user:', err);\r\n            setError('Failed to update user');\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await deleteUser(id);\r\n            setUsers(users.filter(user => user._id !== id));\r\n        } catch (err) {\r\n            console.error('Failed to delete user:', err);\r\n            setError('Failed to delete user');\r\n        }\r\n    };\r\n\r\n    if (loading) return <div>Loading users...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <div className=\"userManagement\">\r\n            {editMode ? (\r\n                <div className=\"editForm\">\r\n                    <h4>Edit User</h4>\r\n                    <div className=\"imageUploadSection\">\r\n                        <label htmlFor=\"file\" className=\"imageUploadLabel\">\r\n                            <img \r\n                                src={\r\n                                    file\r\n                                        ? URL.createObjectURL(file)\r\n                                        : formData.img || defaultProfilePic\r\n                                } \r\n                                alt=\"Profile Preview\" \r\n                                className=\"editProfilePic\" \r\n                            />\r\n                            <DriveFolderUploadOutlinedIcon className=\"uploadIcon\" />\r\n                        </label>\r\n                        <input\r\n                            type=\"file\"\r\n                            id=\"file\"\r\n                            onChange={handleFileChange}\r\n                            style={{ display: 'none' }}\r\n                        />\r\n                    </div>\r\n                    <label>Username:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={formData.username}\r\n                        onChange={handleFormChange}\r\n                    />\r\n                    <label>Email:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleFormChange}\r\n                    />\r\n                    <button onClick={handleConfirmEdit}>Confirm Edit</button>\r\n                    <button onClick={() => setEditMode(false)}>Cancel</button>\r\n                </div>\r\n            ) : (\r\n                <table className=\"managementTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Profile</th>\r\n                            <th>Username</th>\r\n                            <th>Email</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>\r\n                                    <img \r\n                                        src={user.img || defaultProfilePic} \r\n                                        alt=\"User Profile\" \r\n                                        className=\"userTablePic\" \r\n                                    />\r\n                                </td>\r\n                                <td>{user.username}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>\r\n                                    <button onClick={() => handleEditClick(user._id)}>Edit</button>\r\n                                    <button onClick={() => handleDelete(user._id)}>Delete</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserManagement;"]},"metadata":{},"sourceType":"module"}