{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\BusEase\\\\admin\\\\src\\\\components\\\\datatable\\\\Datatable.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./datatable.scss\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport useFetch from \"../../hooks/useFetch\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Datatable = _ref => {\n  _s();\n\n  let {\n    columns\n  } = _ref;\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[1];\n  const [list, setList] = useState([]); // Set an initial empty array\n\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`/${path}`);\n  useEffect(() => {\n    setList(data || []); // Ensure data is always an array\n  }, [data]);\n\n  const handleDelete = async id => {\n    if (window.confirm(\"Are you sure you want to delete this item?\")) {\n      try {\n        await axios.delete(`/${path}/${id}`);\n        setList(list.filter(item => item._id !== id));\n      } catch (err) {\n        console.error(\"Failed to delete item:\", err);\n      }\n    }\n  };\n\n  const actionColumn = [{\n    field: \"action\",\n    headerName: \"Action\",\n    width: 200,\n    flex: 1,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cellAction\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/${path}/${params.row._id}`,\n          style: {\n            textDecoration: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"viewButton\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deleteButton\",\n          onClick: () => handleDelete(params.row._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error loading data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"datatable\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"datatableTitle\",\n      children: [path === \"users\" ? \"Add New User\" : \"Add New Schedule\", /*#__PURE__*/_jsxDEV(Link, {\n        to: `/${path}/new`,\n        className: \"link\",\n        children: \"Add New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DataGrid, {\n      className: \"datagrid\",\n      rows: list,\n      columns: [...columns, ...actionColumn] // Action column is last\n      ,\n      pageSize: 9,\n      rowsPerPageOptions: [9],\n      checkboxSelection: true,\n      getRowId: row => row._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Datatable, \"1eT+v/ft4kFKGXEYmELG6RZkJuE=\", false, function () {\n  return [useLocation, useFetch];\n});\n\n_c = Datatable;\nexport default Datatable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Datatable\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/BusEase/admin/src/components/datatable/Datatable.jsx"],"names":["DataGrid","Link","useLocation","useEffect","useState","useFetch","axios","Datatable","columns","location","path","pathname","split","list","setList","data","loading","error","handleDelete","id","window","confirm","delete","filter","item","_id","err","console","actionColumn","field","headerName","width","flex","renderCell","params","row","textDecoration"],"mappings":"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","sourcesContent":["import \"./datatable.scss\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport axios from \"axios\";\r\n\r\nconst Datatable = ({ columns }) => {\r\n  const location = useLocation();\r\n  const path = location.pathname.split(\"/\")[1];\r\n  const [list, setList] = useState([]); // Set an initial empty array\r\n  const { data, loading, error } = useFetch(`/${path}`);\r\n\r\n  useEffect(() => {\r\n    setList(data || []); // Ensure data is always an array\r\n  }, [data]);\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this item?\")) {\r\n      try {\r\n        await axios.delete(`/${path}/${id}`);\r\n        setList(list.filter((item) => item._id !== id));\r\n      } catch (err) {\r\n        console.error(\"Failed to delete item:\", err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const actionColumn = [\r\n    {\r\n      field: \"action\",\r\n      headerName: \"Action\",\r\n      width: 200,\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"cellAction\">\r\n            <Link to={`/${path}/${params.row._id}`} style={{ textDecoration: \"none\" }}>\r\n              <div className=\"viewButton\">View</div>\r\n            </Link>\r\n            <div\r\n              className=\"deleteButton\"\r\n              onClick={() => handleDelete(params.row._id)}\r\n            >\r\n              Delete\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  if (error) {\r\n    return <div>Error loading data</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"datatable\">\r\n      <div className=\"datatableTitle\">\r\n        {path === \"users\" ? \"Add New User\" : \"Add New Schedule\"}\r\n        <Link to={`/${path}/new`} className=\"link\">\r\n          Add New\r\n        </Link>\r\n      </div>\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <DataGrid\r\n          className=\"datagrid\"\r\n          rows={list}\r\n          columns={[...columns, ...actionColumn]} // Action column is last\r\n          pageSize={9}\r\n          rowsPerPageOptions={[9]}\r\n          checkboxSelection\r\n          getRowId={(row) => row._id}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Datatable;\r\n"]},"metadata":{},"sourceType":"module"}