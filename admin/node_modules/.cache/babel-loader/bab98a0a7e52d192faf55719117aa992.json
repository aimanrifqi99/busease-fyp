{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\BusEase\\\\admin\\\\src\\\\components\\\\BookingDetail\\\\BookingDetail.jsx\",\n    _s = $RefreshSig$();\n\n// src/pages/booking/BookingDetail.jsx\nimport React, { useEffect, useState } from 'react';\nimport { getBooking, updateBooking } from '../../api/bookingApi';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './BookingDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookingDetail = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [formData, setFormData] = useState({\n    user: '',\n    schedule: '',\n    seatNumbers: [],\n    totalPrice: '',\n    bookingDate: '',\n    status: 'ongoing'\n  });\n  useEffect(() => {\n    const fetchBooking = async () => {\n      try {\n        const {\n          data\n        } = await getBooking(id);\n        setFormData({\n          user: data.user ? data.user._id : '',\n          // Store the ID\n          schedule: data.schedule ? data.schedule._id : '',\n          // Store the ID\n          seatNumbers: data.seatNumbers || [],\n          totalPrice: data.totalPrice || '',\n          bookingDate: data.bookingDate ? new Date(data.bookingDate).toISOString().split('T')[0] : '',\n          status: data.status || 'ongoing'\n        });\n      } catch (err) {\n        setError('Failed to fetch booking details');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchBooking();\n  }, [id]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    setSuccessMessage('');\n    const updatedData = { ...formData,\n      totalPrice: parseFloat(formData.totalPrice),\n      seatNumbers: formData.seatNumbers.map(Number) // Ensure seatNumbers are numbers\n\n    };\n\n    try {\n      await updateBooking(id, updatedData);\n      setSuccessMessage('Booking updated successfully');\n      setTimeout(() => setSuccessMessage(''), 3000); // Clear message after 3 seconds\n    } catch (err) {\n      setError('Failed to update booking');\n      console.error(err);\n    }\n  };\n\n  const handleCancel = () => {\n    navigate(-1); // Navigate back to the previous page\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bookingDetail\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading booking details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 56\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bookingDetail\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errorMessage\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 54\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bookingDetail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Booking Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"User:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"user\",\n          name: \"user\",\n          value: formData.user,\n          onChange: handleChange,\n          disabled: true // Assuming user cannot be changed\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"schedule\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Schedule:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"schedule\",\n          name: \"schedule\",\n          value: formData.schedule,\n          onChange: handleChange,\n          disabled: true // Assuming schedule cannot be changed\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"seatNumbers\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Seat Numbers:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"seatNumbers\",\n          name: \"seatNumbers\",\n          value: formData.seatNumbers.join(', '),\n          onChange: e => setFormData({ ...formData,\n            seatNumbers: e.target.value.split(',').map(num => num.trim())\n          }),\n          required: true,\n          placeholder: \"e.g., 1, 2, 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"totalPrice\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"totalPrice\",\n          name: \"totalPrice\",\n          value: formData.totalPrice,\n          onChange: handleChange,\n          required: true,\n          min: \"0\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bookingDate\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Booking Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"bookingDate\",\n          name: \"bookingDate\",\n          value: formData.bookingDate,\n          onChange: handleChange,\n          required: true,\n          disabled: true // Assuming booking date cannot be changed\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"status\",\n          name: \"status\",\n          value: formData.status,\n          onChange: handleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ongoing\",\n            children: \"Ongoing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cancelled\",\n            children: \"Cancelled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessage\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 27\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"successMessage\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Booking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleCancel,\n          className: \"cancelButton\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookingDetail, \"l8teKTPOuPBMStCP2qxjtTU7T/A=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = BookingDetail;\nexport default BookingDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookingDetail\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/BusEase/admin/src/components/BookingDetail/BookingDetail.jsx"],"names":["React","useEffect","useState","getBooking","updateBooking","useParams","useNavigate","BookingDetail","id","navigate","loading","setLoading","error","setError","successMessage","setSuccessMessage","formData","setFormData","user","schedule","seatNumbers","totalPrice","bookingDate","status","fetchBooking","data","_id","Date","toISOString","split","err","console","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","updatedData","parseFloat","map","Number","setTimeout","handleCancel","join","num","trim"],"mappings":"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","sourcesContent":["// src/pages/booking/BookingDetail.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getBooking, updateBooking } from '../../api/bookingApi';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './BookingDetail.css';\r\n\r\nconst BookingDetail = () => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [formData, setFormData] = useState({\r\n        user: '',\r\n        schedule: '',\r\n        seatNumbers: [],\r\n        totalPrice: '',\r\n        bookingDate: '',\r\n        status: 'ongoing'\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchBooking = async () => {\r\n            try {\r\n                const { data } = await getBooking(id);\r\n                setFormData({\r\n                    user: data.user ? data.user._id : '', // Store the ID\r\n                    schedule: data.schedule ? data.schedule._id : '', // Store the ID\r\n                    seatNumbers: data.seatNumbers || [],\r\n                    totalPrice: data.totalPrice || '',\r\n                    bookingDate: data.bookingDate ? new Date(data.bookingDate).toISOString().split('T')[0] : '',\r\n                    status: data.status || 'ongoing'\r\n                });\r\n            } catch (err) {\r\n                setError('Failed to fetch booking details');\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchBooking();\r\n    }, [id]);\r\n    \r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(null);\r\n        setSuccessMessage('');\r\n    \r\n        const updatedData = {\r\n            ...formData,\r\n            totalPrice: parseFloat(formData.totalPrice),\r\n            seatNumbers: formData.seatNumbers.map(Number) // Ensure seatNumbers are numbers\r\n        };\r\n    \r\n        try {\r\n            await updateBooking(id, updatedData);\r\n            setSuccessMessage('Booking updated successfully');\r\n            setTimeout(() => setSuccessMessage(''), 3000); // Clear message after 3 seconds\r\n        } catch (err) {\r\n            setError('Failed to update booking');\r\n            console.error(err);\r\n        }        \r\n    };    \r\n\r\n    const handleCancel = () => {\r\n        navigate(-1); // Navigate back to the previous page\r\n    };\r\n\r\n    if (loading) return <div className=\"bookingDetail\"><p>Loading booking details...</p></div>;\r\n    if (error) return <div className=\"bookingDetail\"><p className=\"errorMessage\">{error}</p></div>;\r\n\r\n    return (\r\n        <div className=\"bookingDetail\">\r\n            <h2>Booking Details</h2>\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                {/* User Information */}\r\n                <label htmlFor=\"user\">\r\n                    <strong>User:</strong>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"user\"\r\n                        name=\"user\"\r\n                        value={formData.user}\r\n                        onChange={handleChange}\r\n                        disabled // Assuming user cannot be changed\r\n                    />\r\n                </label>\r\n\r\n                {/* Schedule Information */}\r\n                <label htmlFor=\"schedule\">\r\n                    <strong>Schedule:</strong>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"schedule\"\r\n                        name=\"schedule\"\r\n                        value={formData.schedule}\r\n                        onChange={handleChange}\r\n                        disabled // Assuming schedule cannot be changed\r\n                    />\r\n                </label>\r\n\r\n                {/* Seat Numbers */}\r\n                <label htmlFor=\"seatNumbers\">\r\n                    <strong>Seat Numbers:</strong>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"seatNumbers\"\r\n                        name=\"seatNumbers\"\r\n                        value={formData.seatNumbers.join(', ')}\r\n                        onChange={(e) => setFormData({\r\n                            ...formData,\r\n                            seatNumbers: e.target.value.split(',').map(num => num.trim())\r\n                        })}\r\n                        required\r\n                        placeholder=\"e.g., 1, 2, 3\"\r\n                    />\r\n                </label>\r\n\r\n                {/* Total Price */}\r\n                <label htmlFor=\"totalPrice\">\r\n                    <strong>Total Price:</strong>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"totalPrice\"\r\n                        name=\"totalPrice\"\r\n                        value={formData.totalPrice}\r\n                        onChange={handleChange}\r\n                        required\r\n                        min=\"0\"\r\n                        step=\"0.01\"\r\n                    />\r\n                </label>\r\n\r\n                {/* Booking Date */}\r\n                <label htmlFor=\"bookingDate\">\r\n                    <strong>Booking Date:</strong>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"bookingDate\"\r\n                        name=\"bookingDate\"\r\n                        value={formData.bookingDate}\r\n                        onChange={handleChange}\r\n                        required\r\n                        disabled // Assuming booking date cannot be changed\r\n                    />\r\n                </label>\r\n\r\n                {/* Status */}\r\n                <label htmlFor=\"status\">\r\n                    <strong>Status:</strong>\r\n                    <select\r\n                        id=\"status\"\r\n                        name=\"status\"\r\n                        value={formData.status}\r\n                        onChange={handleChange}\r\n                        required\r\n                    >\r\n                        <option value=\"ongoing\">Ongoing</option>\r\n                        <option value=\"completed\">Completed</option>\r\n                        <option value=\"cancelled\">Cancelled</option>\r\n                    </select>\r\n                </label>\r\n\r\n                {error && <div className=\"errorMessage\">{error}</div>}\r\n                {successMessage && <div className=\"successMessage\">{successMessage}</div>}\r\n                \r\n\r\n                <div className=\"buttonGroup\">\r\n                    <button type=\"submit\">Update Booking</button>\r\n                    <button type=\"button\" onClick={handleCancel} className=\"cancelButton\">Back</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookingDetail;\r\n"]},"metadata":{},"sourceType":"module"}