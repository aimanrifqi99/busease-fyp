{"ast":null,"code":"// apiClient.js\nimport axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:5000/api/users',\n  withCredentials: true // Keeps cookies, but JWT from localStorage must still be added\n\n}); // Add a request interceptor to include the Authorization header with the JWT\n\napiClient.interceptors.request.use(config => {\n  var _JSON$parse;\n\n  const token = (_JSON$parse = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.token;\n\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n}, error => Promise.reject(error));\nexport const getUsers = () => apiClient.get('/');\nexport const getUser = id => apiClient.get(`/${id}`);\nexport const updateUser = (id, data) => apiClient.put(`/${id}`, data);\nexport const deleteUser = id => apiClient.delete(`/${id}`);\nexport default apiClient;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/BusEase/admin/src/api/userApi.js"],"names":["axios","apiClient","create","baseURL","withCredentials","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","headers","Authorization","error","Promise","reject","getUsers","get","getUser","id","updateUser","data","put","deleteUser","delete"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAE,iCADkB;AAE3BC,EAAAA,eAAe,EAAE,IAFU,CAEJ;;AAFI,CAAb,CAAlB,C,CAKA;;AACAH,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CACKC,MAAD,IAAY;AAAA;;AACR,QAAMC,KAAK,kBAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAH,gDAAG,YAA0CJ,KAAxD;;AACA,MAAIA,KAAJ,EAAW;AACPD,IAAAA,MAAM,CAACM,OAAP,CAAeC,aAAf,GAAgC,UAASN,KAAM,EAA/C;AACH;;AACD,SAAOD,MAAP;AACH,CAPL,EAQKQ,KAAD,IAAWC,OAAO,CAACC,MAAR,CAAeF,KAAf,CARf;AAWA,OAAO,MAAMG,QAAQ,GAAG,MAAMlB,SAAS,CAACmB,GAAV,CAAc,GAAd,CAAvB;AACP,OAAO,MAAMC,OAAO,GAAIC,EAAD,IAAQrB,SAAS,CAACmB,GAAV,CAAe,IAAGE,EAAG,EAArB,CAAxB;AACP,OAAO,MAAMC,UAAU,GAAG,CAACD,EAAD,EAAKE,IAAL,KAAcvB,SAAS,CAACwB,GAAV,CAAe,IAAGH,EAAG,EAArB,EAAwBE,IAAxB,CAAjC;AACP,OAAO,MAAME,UAAU,GAAIJ,EAAD,IAAQrB,SAAS,CAAC0B,MAAV,CAAkB,IAAGL,EAAG,EAAxB,CAA3B;AAEP,eAAerB,SAAf","sourcesContent":["// apiClient.js\r\nimport axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: 'http://localhost:5000/api/users',\r\n    withCredentials: true, // Keeps cookies, but JWT from localStorage must still be added\r\n});\r\n\r\n// Add a request interceptor to include the Authorization header with the JWT\r\napiClient.interceptors.request.use(\r\n    (config) => {\r\n        const token = JSON.parse(localStorage.getItem('user'))?.token;\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n);\r\n\r\nexport const getUsers = () => apiClient.get('/');\r\nexport const getUser = (id) => apiClient.get(`/${id}`);\r\nexport const updateUser = (id, data) => apiClient.put(`/${id}`, data);\r\nexport const deleteUser = (id) => apiClient.delete(`/${id}`);\r\n\r\nexport default apiClient;\r\n"]},"metadata":{},"sourceType":"module"}